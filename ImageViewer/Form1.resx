<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="file.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>127, 17</value>
  </metadata>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>195, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAACAAAAAQAAAcHAAASCAAAFAgAABQIAAAUCAAAFAgAABQIAAAUCAAAFAgAABQIAAAUCAAAFAgA
        ABQIAAAUCAAAFAgAABQHAAASAwAABwcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAIBYTABIIBQQuJCJKUERCq2NWVtFlWFjWZVhY1mVYWNZlWFjWZVhY1mVYWNZlWFjWZVhY1mVY
        WNZlWFjWZVhY1mVYWNZlWFjWZVhY1mNWVtFQQ0KsLiMiSxIIBgQgFhQAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAACogHwBmWVcAMigmWnFjY+yYiYf/l4p6/5qNev+ajXr/mo16/5qNev+ajXr/mo16/5qN
        ev+ajXr/mo16/5qNev+ajXr/mYt6/5WIf/+Zj4P/louC/5iJiP9xY2PsMigmWV9TVQAsIh4AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAKyEfABcOCxZdUVDLmYuG/4B6Kf+TkgX/mJcE/5iXBP+YlwT/mJcE/5iX
        BP+YlwT/mJcE/5iXBP+YlwT/mJcE/5eVBP97exb/gJJC/5StTf+Ppkv/fYVQ/5mLiP9dUE/LFw0LFish
        HwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArIR8AIhgWN3xucPCMgVz/nJsA/6ioAP+npwD/p6cA/6en
        AP+npwD/p6cA/6enAP+npwD/p6cA/6enAP+mpQD/iYsR/4mdQP+gv1P/ob9S/6LAU/+WsUz/ioZu/3xt
        bvAiGBY2KyEfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACshHwAjGhg/gXJ195GHVP+iogD/pqYA/6am
        AP+mpgD/pqYA/6amAP+mpgD/pqYA/6amAP+mpgD/paQA/4iKEf+InEH/oL5T/6C+Uv+gvlL/oL5S/5y6
        T/+Pjm3/gXJ09yMaGD8rIR8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKyEfACMaGD+BcnX3kYdU/6Ki
        AP+mpgD/pqYA/6amAP+mpgD/pqYA/6amAP+mpgD/pqYA/6WkAP+JihH/iJxB/6C+U/+gvlL/oL5S/6C+
        Uv+hv1L/j6dL/4eBbf+Bc3T3IxoYPyshHwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArIR8AIxoYP4Fy
        dfeSiFT/oqIA/6amAP+mpgD/pqYA/6amAP+mpgD/pqYA/6amAP+kpAD/i4gZ/3yHQv+evFH/oL5S/6C+
        Uv+gvlL/oL9S/5KqTv+foXb/n5OK/4BycvcjGhg/KyEfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsh
        HwAjGhg/gXN1942DVf+fnwD/pqYA/6amAP+mpgD/pqYA/6amAP+mpgD/pKQA/5KPIP++t5H/ubeT/46g
        Uv+fvVH/oL5S/6C/Uv+SqU7/pKV6/+Dauf+nnJH/f3Fx9yMaGD8rIR8AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAKyEfACMaGD+Bc3P3joJz/46LI/+jowD/pqYA/6amAP+mpgD/pqYA/6SkAP+Sjx//v7mS/+7n
        xv/t5sT/ubaT/46gUf+evVD/kqlN/6Slev/l377/6uTB/6+jl/+AcXL3IxoYPyshHwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAArIR8AIxoYP39xcfennJL/wLuW/5KOJ/+jogD/pqYA/6amAP+kpAD/ko8f/7+5
        kv/t58X/7efE/+3nxP/s5sT/ureT/42YWf+mqH3/5d++/+7oxf/r5sL/xrur/4BycvcjGhg/KyEfAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAACshHwAjGhg/f3Fx96ebkf/p48H/xcCb/5KOJ/+jowD/pKQA/5GP
        H/+/uZL/7efF/+3nxP/t58T/7efE/+3nxP/s5sP/3te3/+njwf/u6MX/7efE/+njwP+rn5P/f3Fy9yMa
        GD8rIR8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKyEfACMaGD9/cXH3p5uR/+jiwP/u6Mb/xr+b/5GN
        Kf+RjSP/v7mS/+3nxf/t58T/7efE/+3nxP/t58T/7efE/+7oxP/t5sL/6uK//+7nxP/t58T/6+bC/8a7
        q/+AcnL3IxoYPyshHwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArIR8AIxoYP39xcfenm5H/6OLA/+3n
        xP/t58X/1M2r/9HLqP/t58T/7efE/+3nxP/t58T/7efE/+3nxP/u6MX/4Nu6/5WxpP98ran/ucCp/+3m
        w//q5MH/uq+h/4BycvcjGhg/KyEfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACshHwAjGhg/f3Fx96eb
        kf/o4sD/7efE/+3nxP/u6Mb/7+nG/+3nxP/t58T/7efE/+3nxP/t58T/7efE//Doxf+puKT/Vsva/1fj
        9/9osbX/29W1/+/pxf/b0Lz/gXNz9yMaGD8rIR8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKyEfACMa
        GD9/cXH3p5uR/+jiwP/t58T/7efE/+3nxP/t58T/7efE/+3nxP/t58T/7efE/+3nxP/t58T/8OjF/6m3
        pP9Wy9v/V+P3/2ixtf/b1bX/7+nF/97Tv/+Bc3P3IxoYPyshHwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAArIR8AIxoYP39xcfenm5D/6OLA/+3nxP/t58T/7efE/+3nxP/t58T/7efE/+3nxP/t58T/7efE/+3n
        xP/u6MX/4Nq6/5WxpP98ran/ucCp/+3mw//u6MT/3tO//4Fzc/cjGhg/KyEfAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAACshHwAiGBY3e21t8Kaakf/i3Lv/7+nG/+7oxf/u6MX/7ujF/+7oxf/u6MX/7ujF/+7o
        xf/u6MX/7ujF/+7oxf/v6cb/7ubD/+vjwP/u58T/7efE/+7oxP/azr3/e21u8CIYFjcrIR8AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAKyEfABcOCxdcUE/LpJWT/7Oqlf/Uzq//19Gx/9fRsf/X0bH/19Gx/9fR
        sf/X0bH/19Gx/9fRsf/X0bH/19Gx/9fRsf/X0bH/2dOz/+rkwf/t58T/59/D/76wqv9bT07LFw0LFish
        HwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsIB4AYllYADIoJlpxY2Psn5GP/6KUkP+ilJD/opSQ/6KU
        kP+ilJD/opSQ/6KUkP+ilJD/opSQ/6KUkP+ilJD/opSQ/6KUkP+mmZT/x7qw/8u+s/+zpaD/cGNj7DIo
        JlpkWFUAKyEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgFhMAEggFBC4kIktPQ0KtYlVV0WRX
        V9ZkV1fWZFdX1mRXV9ZkV1fWZFdX1mRXV9ZkV1fWZFdX1mRXV9ZkV1fWZFdX1mRXV9ZiVVXWYFNT0U1B
        Qa0uJCJNEQgFBCAWEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAAAAMA
        AAcHAAASCAAAFAgAABQIAAAUCAAAFAgAABQIAAAUCAAAFAgAABQIAAAUCAAAFAgAABQIAAAUCAAAFAgA
        ABQHAAASAwAABwcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////////////////////////+AAB/+AAAH/gAAB/wAAAP8AAAD/AA
        AA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP+AAAH/gA
        AB/+AAB///////////////////////////8=
</value>
  </data>
</root>